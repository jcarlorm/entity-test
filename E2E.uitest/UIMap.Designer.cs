// ------------------------------------------------------------------------------
//  <auto-generated>
//      Este código lo generó el generador de pruebas automatizadas de IU.
//      Versión: 15.0.0.0
//
//      Los cambios realizados en este archivo pueden provocar un comportamiento incorrecto y se perderán si
//      se vuelve a generar el código.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace E2E.uitest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TestLogin: use 'TestLoginParams' para pasar parámetros a este método.
        /// </summary>
        public void TestLogin()
        {
            #region Variable Declarations
            WinEdit uITxtNombreEdit = this.UILoginWindow.UITxtNombreWindow.UITxtNombreEdit;
            WinEdit uITxtPasswordEdit = this.UILoginWindow.UITxtPasswordWindow.UITxtPasswordEdit;
            WinButton uILoginButton = this.UILoginWindow.UILoginWindow1.UILoginButton;
            WinButton uIAceptarButton = this.UIAceptarWindow.UIAceptarButton;
            #endregion

            // Escribir 'prubea' en cuadro de texto 'txtNombre'
            uITxtNombreEdit.Text = this.TestLoginParams.UITxtNombreEditText;

            // Escribir '{Tab}' en cuadro de texto 'txtNombre'
            Keyboard.SendKeys(uITxtNombreEdit, this.TestLoginParams.UITxtNombreEditSendKeys, ModifierKeys.None);

            // Escribir 'clave' en cuadro de texto 'txtPassword'
            uITxtPasswordEdit.Text = this.TestLoginParams.UITxtPasswordEditText;

            // Escribir '{Tab}' en cuadro de texto 'txtPassword'
            Keyboard.SendKeys(uITxtPasswordEdit, this.TestLoginParams.UITxtPasswordEditSendKeys, ModifierKeys.None);

            // Escribir '{Space}' en botón 'Login'
            Keyboard.SendKeys(uILoginButton, this.TestLoginParams.UILoginButtonSendKeys, ModifierKeys.None);

            // Clic 'Aceptar' botón
            Mouse.Click(uIAceptarButton, new Point(28, 15));
        }
        
        /// <summary>
        /// Acepto
        /// </summary>
        public void Acepto()
        {
            #region Variable Declarations
            WinWindow uIAceptarWindow = this.UIAceptarWindow;
            #endregion

            // Compruebe que la propiedad 'Name' de 'Aceptar' ventana no es igual a 'nula'
            Assert.IsNotNull(uIAceptarWindow.Name);
        }
        
        #region Properties
        public virtual TestLoginParams TestLoginParams
        {
            get
            {
                if ((this.mTestLoginParams == null))
                {
                    this.mTestLoginParams = new TestLoginParams();
                }
                return this.mTestLoginParams;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UIAceptarWindow UIAceptarWindow
        {
            get
            {
                if ((this.mUIAceptarWindow == null))
                {
                    this.mUIAceptarWindow = new UIAceptarWindow();
                }
                return this.mUIAceptarWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestLoginParams mTestLoginParams;
        
        private UILoginWindow mUILoginWindow;
        
        private UIAceptarWindow mUIAceptarWindow;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'TestLogin'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class TestLoginParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir 'prubea' en cuadro de texto 'txtNombre'
        /// </summary>
        public string UITxtNombreEditText = "prubea";
        
        /// <summary>
        /// Escribir '{Tab}' en cuadro de texto 'txtNombre'
        /// </summary>
        public string UITxtNombreEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Escribir 'clave' en cuadro de texto 'txtPassword'
        /// </summary>
        public string UITxtPasswordEditText = "clave";
        
        /// <summary>
        /// Escribir '{Tab}' en cuadro de texto 'txtPassword'
        /// </summary>
        public string UITxtPasswordEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Escribir '{Space}' en botón 'Login'
        /// </summary>
        public string UILoginButtonSendKeys = "{Space}";
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UITxtNombreWindow UITxtNombreWindow
        {
            get
            {
                if ((this.mUITxtNombreWindow == null))
                {
                    this.mUITxtNombreWindow = new UITxtNombreWindow(this);
                }
                return this.mUITxtNombreWindow;
            }
        }
        
        public UITxtPasswordWindow UITxtPasswordWindow
        {
            get
            {
                if ((this.mUITxtPasswordWindow == null))
                {
                    this.mUITxtPasswordWindow = new UITxtPasswordWindow(this);
                }
                return this.mUITxtPasswordWindow;
            }
        }
        
        public UILoginWindow1 UILoginWindow1
        {
            get
            {
                if ((this.mUILoginWindow1 == null))
                {
                    this.mUILoginWindow1 = new UILoginWindow1(this);
                }
                return this.mUILoginWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UITxtNombreWindow mUITxtNombreWindow;
        
        private UITxtPasswordWindow mUITxtPasswordWindow;
        
        private UILoginWindow1 mUILoginWindow1;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UITxtNombreWindow : WinWindow
    {
        
        public UITxtNombreWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNombre";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNombreEdit
        {
            get
            {
                if ((this.mUITxtNombreEdit == null))
                {
                    this.mUITxtNombreEdit = new WinEdit(this);
                    #region Criterio de búsqueda
                    this.mUITxtNombreEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUITxtNombreEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNombreEdit;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UITxtPasswordWindow : WinWindow
    {
        
        public UITxtPasswordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPassword";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPasswordEdit
        {
            get
            {
                if ((this.mUITxtPasswordEdit == null))
                {
                    this.mUITxtPasswordEdit = new WinEdit(this);
                    #region Criterio de búsqueda
                    this.mUITxtPasswordEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUITxtPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginWindow1 : WinWindow
    {
        
        public UILoginWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnLogin";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[WinButton.PropertyNames.Name] = "Login";
                    this.mUILoginButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIAceptarWindow : WinWindow
    {
        
        public UIAceptarWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Aceptar";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("Aceptar");
            #endregion
        }
        
        #region Properties
        public WinButton UIAceptarButton
        {
            get
            {
                if ((this.mUIAceptarButton == null))
                {
                    this.mUIAceptarButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUIAceptarButton.SearchProperties[WinButton.PropertyNames.Name] = "Aceptar";
                    this.mUIAceptarButton.WindowTitles.Add("Aceptar");
                    #endregion
                }
                return this.mUIAceptarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAceptarButton;
        #endregion
    }
}
