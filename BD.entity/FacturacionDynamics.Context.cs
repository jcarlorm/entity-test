//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BD.entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DYNAMICSEntities : DbContext
    {
        public DYNAMICSEntities()
            : base("name=DYNAMICSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<admin_factura_electronica> admin_factura_electronica { get; set; }
        public virtual DbSet<Categorias> Categorias { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Coches> Coches { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<Factura_Electronica> Factura_Electronica { get; set; }
        public virtual DbSet<Mecanico> Mecanico { get; set; }
        public virtual DbSet<Orden> Orden { get; set; }
        public virtual DbSet<perfil> perfil { get; set; }
        public virtual DbSet<regla> regla { get; set; }
        public virtual DbSet<Revision> Revision { get; set; }
        public virtual DbSet<tipoCategorias> tipoCategorias { get; set; }
        public virtual DbSet<transPerfilRegla> transPerfilRegla { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<ListarCoche> ListarCoche { get; set; }
    
        public virtual int ActualizaConsecutivoFacturaE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaConsecutivoFacturaE");
        }
    
        public virtual int AgregarCategorias(Nullable<int> tipoCategoria, string descripcion, Nullable<double> costo, string abreviacion)
        {
            var tipoCategoriaParameter = tipoCategoria.HasValue ?
                new ObjectParameter("tipoCategoria", tipoCategoria) :
                new ObjectParameter("tipoCategoria", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(double));
    
            var abreviacionParameter = abreviacion != null ?
                new ObjectParameter("abreviacion", abreviacion) :
                new ObjectParameter("abreviacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarCategorias", tipoCategoriaParameter, descripcionParameter, costoParameter, abreviacionParameter);
        }
    
        public virtual int AgregarCliente(string nombre, string apellido, string telefono1, Nullable<int> tipoCedula, string cedula, string dirección, string correo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("telefono1", telefono1) :
                new ObjectParameter("telefono1", typeof(string));
    
            var tipoCedulaParameter = tipoCedula.HasValue ?
                new ObjectParameter("tipoCedula", tipoCedula) :
                new ObjectParameter("tipoCedula", typeof(int));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var direcciónParameter = dirección != null ?
                new ObjectParameter("dirección", dirección) :
                new ObjectParameter("dirección", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarCliente", nombreParameter, apellidoParameter, telefono1Parameter, tipoCedulaParameter, cedulaParameter, direcciónParameter, correoParameter);
        }
    
        public virtual int AgregarCoche(string placa, string marca, string modelo, Nullable<int> cilindrada, Nullable<int> año, Nullable<int> combustible, Nullable<int> transmision, Nullable<int> capacidad, string vin, string detalle, Nullable<int> idCliente)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var cilindradaParameter = cilindrada.HasValue ?
                new ObjectParameter("cilindrada", cilindrada) :
                new ObjectParameter("cilindrada", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var combustibleParameter = combustible.HasValue ?
                new ObjectParameter("combustible", combustible) :
                new ObjectParameter("combustible", typeof(int));
    
            var transmisionParameter = transmision.HasValue ?
                new ObjectParameter("transmision", transmision) :
                new ObjectParameter("transmision", typeof(int));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("capacidad", capacidad) :
                new ObjectParameter("capacidad", typeof(int));
    
            var vinParameter = vin != null ?
                new ObjectParameter("vin", vin) :
                new ObjectParameter("vin", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarCoche", placaParameter, marcaParameter, modeloParameter, cilindradaParameter, añoParameter, combustibleParameter, transmisionParameter, capacidadParameter, vinParameter, detalleParameter, idClienteParameter);
        }
    
        public virtual int AgregarFactura(Nullable<int> idRevisión, Nullable<int> idOrden, Nullable<int> idCliente, string descripción, Nullable<int> descuento, Nullable<double> impuesto, Nullable<double> subtotal, Nullable<double> total, string tipoPago, string condicionVenta, Nullable<int> exonerado, string nombreUsuario, string contraseña)
        {
            var idRevisiónParameter = idRevisión.HasValue ?
                new ObjectParameter("idRevisión", idRevisión) :
                new ObjectParameter("idRevisión", typeof(int));
    
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("idOrden", idOrden) :
                new ObjectParameter("idOrden", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var descripciónParameter = descripción != null ?
                new ObjectParameter("descripción", descripción) :
                new ObjectParameter("descripción", typeof(string));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(int));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(double));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(double));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            var tipoPagoParameter = tipoPago != null ?
                new ObjectParameter("tipoPago", tipoPago) :
                new ObjectParameter("tipoPago", typeof(string));
    
            var condicionVentaParameter = condicionVenta != null ?
                new ObjectParameter("condicionVenta", condicionVenta) :
                new ObjectParameter("condicionVenta", typeof(string));
    
            var exoneradoParameter = exonerado.HasValue ?
                new ObjectParameter("exonerado", exonerado) :
                new ObjectParameter("exonerado", typeof(int));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarFactura", idRevisiónParameter, idOrdenParameter, idClienteParameter, descripciónParameter, descuentoParameter, impuestoParameter, subtotalParameter, totalParameter, tipoPagoParameter, condicionVentaParameter, exoneradoParameter, nombreUsuarioParameter, contraseñaParameter);
        }
    
        public virtual int AgregarMecanico(string nombre, string apellido)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarMecanico", nombreParameter, apellidoParameter);
        }
    
        public virtual int AgregarOrden(Nullable<int> idRevision, Nullable<int> idCoche, Nullable<int> idUsuario, Nullable<int> idCliente, string descripción, Nullable<double> total, string tipoCategoria, string categoria, string precio, Nullable<int> descuento)
        {
            var idRevisionParameter = idRevision.HasValue ?
                new ObjectParameter("idRevision", idRevision) :
                new ObjectParameter("idRevision", typeof(int));
    
            var idCocheParameter = idCoche.HasValue ?
                new ObjectParameter("idCoche", idCoche) :
                new ObjectParameter("idCoche", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var descripciónParameter = descripción != null ?
                new ObjectParameter("descripción", descripción) :
                new ObjectParameter("descripción", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            var tipoCategoriaParameter = tipoCategoria != null ?
                new ObjectParameter("tipoCategoria", tipoCategoria) :
                new ObjectParameter("tipoCategoria", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var precioParameter = precio != null ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(string));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarOrden", idRevisionParameter, idCocheParameter, idUsuarioParameter, idClienteParameter, descripciónParameter, totalParameter, tipoCategoriaParameter, categoriaParameter, precioParameter, descuentoParameter);
        }
    
        public virtual int AgregarPerfil(string perfil, string descripción, Nullable<int> idUsuario)
        {
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var descripciónParameter = descripción != null ?
                new ObjectParameter("descripción", descripción) :
                new ObjectParameter("descripción", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarPerfil", perfilParameter, descripciónParameter, idUsuarioParameter);
        }
    
        public virtual int AgregarRevision(Nullable<int> idCoche, Nullable<int> idUsuario, string idCliente, string descripción, Nullable<double> total, string tipoCategoria, string categoria, string precio)
        {
            var idCocheParameter = idCoche.HasValue ?
                new ObjectParameter("idCoche", idCoche) :
                new ObjectParameter("idCoche", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idClienteParameter = idCliente != null ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(string));
    
            var descripciónParameter = descripción != null ?
                new ObjectParameter("descripción", descripción) :
                new ObjectParameter("descripción", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            var tipoCategoriaParameter = tipoCategoria != null ?
                new ObjectParameter("tipoCategoria", tipoCategoria) :
                new ObjectParameter("tipoCategoria", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var precioParameter = precio != null ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarRevision", idCocheParameter, idUsuarioParameter, idClienteParameter, descripciónParameter, totalParameter, tipoCategoriaParameter, categoriaParameter, precioParameter);
        }
    
        public virtual int AgregarTipoCategorias(string descripcion, Nullable<int> tipoServicio)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var tipoServicioParameter = tipoServicio.HasValue ?
                new ObjectParameter("tipoServicio", tipoServicio) :
                new ObjectParameter("tipoServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarTipoCategorias", descripcionParameter, tipoServicioParameter);
        }
    
        public virtual int AgregarTransPerfilRegla(Nullable<int> idPerfilNuevo, Nullable<int> idRegla, Nullable<int> idUsuarioLogueado)
        {
            var idPerfilNuevoParameter = idPerfilNuevo.HasValue ?
                new ObjectParameter("IdPerfilNuevo", idPerfilNuevo) :
                new ObjectParameter("IdPerfilNuevo", typeof(int));
    
            var idReglaParameter = idRegla.HasValue ?
                new ObjectParameter("IdRegla", idRegla) :
                new ObjectParameter("IdRegla", typeof(int));
    
            var idUsuarioLogueadoParameter = idUsuarioLogueado.HasValue ?
                new ObjectParameter("idUsuarioLogueado", idUsuarioLogueado) :
                new ObjectParameter("idUsuarioLogueado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarTransPerfilRegla", idPerfilNuevoParameter, idReglaParameter, idUsuarioLogueadoParameter);
        }
    
        public virtual int AgregarUsuario(string nombre, string apellido, string contraseña, Nullable<int> idPerfil, Nullable<int> idUsuarioLogueado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            var idUsuarioLogueadoParameter = idUsuarioLogueado.HasValue ?
                new ObjectParameter("idUsuarioLogueado", idUsuarioLogueado) :
                new ObjectParameter("idUsuarioLogueado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarUsuario", nombreParameter, apellidoParameter, contraseñaParameter, idPerfilParameter, idUsuarioLogueadoParameter);
        }
    
        public virtual int CambiarEstadoOrden(Nullable<int> estado, Nullable<int> idOrden, Nullable<int> idUsuarioLogueado)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("idOrden", idOrden) :
                new ObjectParameter("idOrden", typeof(int));
    
            var idUsuarioLogueadoParameter = idUsuarioLogueado.HasValue ?
                new ObjectParameter("idUsuarioLogueado", idUsuarioLogueado) :
                new ObjectParameter("idUsuarioLogueado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoOrden", estadoParameter, idOrdenParameter, idUsuarioLogueadoParameter);
        }
    
        public virtual int CambiarEstadoRevision(Nullable<int> estado, Nullable<int> idRevision, Nullable<int> idUsuarioLogueado)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var idRevisionParameter = idRevision.HasValue ?
                new ObjectParameter("idRevision", idRevision) :
                new ObjectParameter("idRevision", typeof(int));
    
            var idUsuarioLogueadoParameter = idUsuarioLogueado.HasValue ?
                new ObjectParameter("idUsuarioLogueado", idUsuarioLogueado) :
                new ObjectParameter("idUsuarioLogueado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoRevision", estadoParameter, idRevisionParameter, idUsuarioLogueadoParameter);
        }
    
        public virtual int CambiarEstadoUsuario(Nullable<int> estado, Nullable<int> idUsuario, Nullable<int> idUsuarioLogueado)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idUsuarioLogueadoParameter = idUsuarioLogueado.HasValue ?
                new ObjectParameter("idUsuarioLogueado", idUsuarioLogueado) :
                new ObjectParameter("idUsuarioLogueado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoUsuario", estadoParameter, idUsuarioParameter, idUsuarioLogueadoParameter);
        }
    
        public virtual int EditarCategorias(Nullable<int> idCategoria, Nullable<int> tipoCategoria, string descripcion, Nullable<double> costo, string abreviacion, Nullable<int> estado)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var tipoCategoriaParameter = tipoCategoria.HasValue ?
                new ObjectParameter("tipoCategoria", tipoCategoria) :
                new ObjectParameter("tipoCategoria", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(double));
    
            var abreviacionParameter = abreviacion != null ?
                new ObjectParameter("abreviacion", abreviacion) :
                new ObjectParameter("abreviacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarCategorias", idCategoriaParameter, tipoCategoriaParameter, descripcionParameter, costoParameter, abreviacionParameter, estadoParameter);
        }
    
        public virtual int EditarCliente(Nullable<int> idCliente, string nombre, string apellido, string telefono1, Nullable<int> tipoCedula, string cedula, string dirección, string correo, Nullable<int> estado)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("telefono1", telefono1) :
                new ObjectParameter("telefono1", typeof(string));
    
            var tipoCedulaParameter = tipoCedula.HasValue ?
                new ObjectParameter("tipoCedula", tipoCedula) :
                new ObjectParameter("tipoCedula", typeof(int));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var direcciónParameter = dirección != null ?
                new ObjectParameter("dirección", dirección) :
                new ObjectParameter("dirección", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarCliente", idClienteParameter, nombreParameter, apellidoParameter, telefono1Parameter, tipoCedulaParameter, cedulaParameter, direcciónParameter, correoParameter, estadoParameter);
        }
    
        public virtual int EditarCoche(Nullable<int> idCoche, string placa, string marca, string modelo, Nullable<int> cilindrada, Nullable<int> año, Nullable<int> combustible, Nullable<int> transmision, Nullable<int> capacidad, string vin, string detalle, Nullable<int> idCliente, Nullable<int> estado)
        {
            var idCocheParameter = idCoche.HasValue ?
                new ObjectParameter("idCoche", idCoche) :
                new ObjectParameter("idCoche", typeof(int));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var cilindradaParameter = cilindrada.HasValue ?
                new ObjectParameter("cilindrada", cilindrada) :
                new ObjectParameter("cilindrada", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var combustibleParameter = combustible.HasValue ?
                new ObjectParameter("combustible", combustible) :
                new ObjectParameter("combustible", typeof(int));
    
            var transmisionParameter = transmision.HasValue ?
                new ObjectParameter("transmision", transmision) :
                new ObjectParameter("transmision", typeof(int));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("capacidad", capacidad) :
                new ObjectParameter("capacidad", typeof(int));
    
            var vinParameter = vin != null ?
                new ObjectParameter("vin", vin) :
                new ObjectParameter("vin", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarCoche", idCocheParameter, placaParameter, marcaParameter, modeloParameter, cilindradaParameter, añoParameter, combustibleParameter, transmisionParameter, capacidadParameter, vinParameter, detalleParameter, idClienteParameter, estadoParameter);
        }
    
        public virtual int EditarMecanico(Nullable<int> idMecanico, string nombre, string apellido)
        {
            var idMecanicoParameter = idMecanico.HasValue ?
                new ObjectParameter("idMecanico", idMecanico) :
                new ObjectParameter("idMecanico", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarMecanico", idMecanicoParameter, nombreParameter, apellidoParameter);
        }
    
        public virtual int EditarPerfil(Nullable<int> idPerfil, string perfil, string descripción, Nullable<int> idUsuario)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var descripciónParameter = descripción != null ?
                new ObjectParameter("descripción", descripción) :
                new ObjectParameter("descripción", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarPerfil", idPerfilParameter, perfilParameter, descripciónParameter, idUsuarioParameter);
        }
    
        public virtual int EditarRevision(Nullable<int> idRevision, Nullable<int> idCoche, Nullable<int> idUsuario, string idCliente, string descripción, Nullable<double> total, string tipoCategoria, string categoria, string precio)
        {
            var idRevisionParameter = idRevision.HasValue ?
                new ObjectParameter("idRevision", idRevision) :
                new ObjectParameter("idRevision", typeof(int));
    
            var idCocheParameter = idCoche.HasValue ?
                new ObjectParameter("idCoche", idCoche) :
                new ObjectParameter("idCoche", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idClienteParameter = idCliente != null ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(string));
    
            var descripciónParameter = descripción != null ?
                new ObjectParameter("descripción", descripción) :
                new ObjectParameter("descripción", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            var tipoCategoriaParameter = tipoCategoria != null ?
                new ObjectParameter("tipoCategoria", tipoCategoria) :
                new ObjectParameter("tipoCategoria", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var precioParameter = precio != null ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarRevision", idRevisionParameter, idCocheParameter, idUsuarioParameter, idClienteParameter, descripciónParameter, totalParameter, tipoCategoriaParameter, categoriaParameter, precioParameter);
        }
    
        public virtual int EditarTipoCategorias(Nullable<int> idTipoCategoria, string descripcion, Nullable<int> estado, Nullable<int> tipoServicio)
        {
            var idTipoCategoriaParameter = idTipoCategoria.HasValue ?
                new ObjectParameter("idTipoCategoria", idTipoCategoria) :
                new ObjectParameter("idTipoCategoria", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var tipoServicioParameter = tipoServicio.HasValue ?
                new ObjectParameter("tipoServicio", tipoServicio) :
                new ObjectParameter("tipoServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarTipoCategorias", idTipoCategoriaParameter, descripcionParameter, estadoParameter, tipoServicioParameter);
        }
    
        public virtual int EditarUsuario(Nullable<int> idUsuario, string nombre, string apellido, string contraseña, Nullable<int> idPerfil, Nullable<int> idUsuarioLogueado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            var idUsuarioLogueadoParameter = idUsuarioLogueado.HasValue ?
                new ObjectParameter("idUsuarioLogueado", idUsuarioLogueado) :
                new ObjectParameter("idUsuarioLogueado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarUsuario", idUsuarioParameter, nombreParameter, apellidoParameter, contraseñaParameter, idPerfilParameter, idUsuarioLogueadoParameter);
        }
    
        public virtual int EliminarCategorias(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCategorias", idCategoriaParameter);
        }
    
        public virtual int EliminarFactura(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarFactura", idFacturaParameter);
        }
    
        public virtual int EliminarTipoCategorias(Nullable<int> idTipoCategoria)
        {
            var idTipoCategoriaParameter = idTipoCategoria.HasValue ?
                new ObjectParameter("idTipoCategoria", idTipoCategoria) :
                new ObjectParameter("idTipoCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarTipoCategorias", idTipoCategoriaParameter);
        }
    
        public virtual int EliminarTransPerfilRegla(Nullable<int> idPerfil, Nullable<int> idRegla, Nullable<int> idUsuarioLogueado)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var idReglaParameter = idRegla.HasValue ?
                new ObjectParameter("IdRegla", idRegla) :
                new ObjectParameter("IdRegla", typeof(int));
    
            var idUsuarioLogueadoParameter = idUsuarioLogueado.HasValue ?
                new ObjectParameter("idUsuarioLogueado", idUsuarioLogueado) :
                new ObjectParameter("idUsuarioLogueado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarTransPerfilRegla", idPerfilParameter, idReglaParameter, idUsuarioLogueadoParameter);
        }
    
        public virtual int EliminarUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUsuario", idUsuarioParameter);
        }
    
        public virtual int GuardaActualiza_FacturaE(Nullable<int> id, string tipoIdentificacion, string identificacion, string nombreComercial, string codigoPais, string provincia, string canton, string distrito, string barrio, string otrasSenas, string usuarioATV, string claveATV, string claveCertificado, string normativa, string fechaResolucion, string surcusal, Nullable<int> consecutivo, string urlBase, string urlEnvio, string urlComprobantes, string nombreCompleto, string telefono, string correo, Nullable<int> aplica, string impresora, Nullable<int> nota, string terminal, string correoEnvio)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoIdentificacionParameter = tipoIdentificacion != null ?
                new ObjectParameter("TipoIdentificacion", tipoIdentificacion) :
                new ObjectParameter("TipoIdentificacion", typeof(string));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreComercialParameter = nombreComercial != null ?
                new ObjectParameter("NombreComercial", nombreComercial) :
                new ObjectParameter("NombreComercial", typeof(string));
    
            var codigoPaisParameter = codigoPais != null ?
                new ObjectParameter("CodigoPais", codigoPais) :
                new ObjectParameter("CodigoPais", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var cantonParameter = canton != null ?
                new ObjectParameter("Canton", canton) :
                new ObjectParameter("Canton", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            var barrioParameter = barrio != null ?
                new ObjectParameter("Barrio", barrio) :
                new ObjectParameter("Barrio", typeof(string));
    
            var otrasSenasParameter = otrasSenas != null ?
                new ObjectParameter("OtrasSenas", otrasSenas) :
                new ObjectParameter("OtrasSenas", typeof(string));
    
            var usuarioATVParameter = usuarioATV != null ?
                new ObjectParameter("UsuarioATV", usuarioATV) :
                new ObjectParameter("UsuarioATV", typeof(string));
    
            var claveATVParameter = claveATV != null ?
                new ObjectParameter("ClaveATV", claveATV) :
                new ObjectParameter("ClaveATV", typeof(string));
    
            var claveCertificadoParameter = claveCertificado != null ?
                new ObjectParameter("ClaveCertificado", claveCertificado) :
                new ObjectParameter("ClaveCertificado", typeof(string));
    
            var normativaParameter = normativa != null ?
                new ObjectParameter("Normativa", normativa) :
                new ObjectParameter("Normativa", typeof(string));
    
            var fechaResolucionParameter = fechaResolucion != null ?
                new ObjectParameter("FechaResolucion", fechaResolucion) :
                new ObjectParameter("FechaResolucion", typeof(string));
    
            var surcusalParameter = surcusal != null ?
                new ObjectParameter("Surcusal", surcusal) :
                new ObjectParameter("Surcusal", typeof(string));
    
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            var urlBaseParameter = urlBase != null ?
                new ObjectParameter("UrlBase", urlBase) :
                new ObjectParameter("UrlBase", typeof(string));
    
            var urlEnvioParameter = urlEnvio != null ?
                new ObjectParameter("UrlEnvio", urlEnvio) :
                new ObjectParameter("UrlEnvio", typeof(string));
    
            var urlComprobantesParameter = urlComprobantes != null ?
                new ObjectParameter("UrlComprobantes", urlComprobantes) :
                new ObjectParameter("UrlComprobantes", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var aplicaParameter = aplica.HasValue ?
                new ObjectParameter("Aplica", aplica) :
                new ObjectParameter("Aplica", typeof(int));
    
            var impresoraParameter = impresora != null ?
                new ObjectParameter("Impresora", impresora) :
                new ObjectParameter("Impresora", typeof(string));
    
            var notaParameter = nota.HasValue ?
                new ObjectParameter("Nota", nota) :
                new ObjectParameter("Nota", typeof(int));
    
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            var correoEnvioParameter = correoEnvio != null ?
                new ObjectParameter("CorreoEnvio", correoEnvio) :
                new ObjectParameter("CorreoEnvio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardaActualiza_FacturaE", idParameter, tipoIdentificacionParameter, identificacionParameter, nombreComercialParameter, codigoPaisParameter, provinciaParameter, cantonParameter, distritoParameter, barrioParameter, otrasSenasParameter, usuarioATVParameter, claveATVParameter, claveCertificadoParameter, normativaParameter, fechaResolucionParameter, surcusalParameter, consecutivoParameter, urlBaseParameter, urlEnvioParameter, urlComprobantesParameter, nombreCompletoParameter, telefonoParameter, correoParameter, aplicaParameter, impresoraParameter, notaParameter, terminalParameter, correoEnvioParameter);
        }
    
        public virtual int GuardarFacturaElectronica(Nullable<int> id, Nullable<int> factura_id, string clave, string consecutivo, string xml, string xmlfirmado, string xmlrespuesta, string estado, Nullable<int> documento_id, string fecha)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var factura_idParameter = factura_id.HasValue ?
                new ObjectParameter("factura_id", factura_id) :
                new ObjectParameter("factura_id", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var consecutivoParameter = consecutivo != null ?
                new ObjectParameter("consecutivo", consecutivo) :
                new ObjectParameter("consecutivo", typeof(string));
    
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            var xmlfirmadoParameter = xmlfirmado != null ?
                new ObjectParameter("xmlfirmado", xmlfirmado) :
                new ObjectParameter("xmlfirmado", typeof(string));
    
            var xmlrespuestaParameter = xmlrespuesta != null ?
                new ObjectParameter("xmlrespuesta", xmlrespuesta) :
                new ObjectParameter("xmlrespuesta", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var documento_idParameter = documento_id.HasValue ?
                new ObjectParameter("documento_id", documento_id) :
                new ObjectParameter("documento_id", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarFacturaElectronica", idParameter, factura_idParameter, claveParameter, consecutivoParameter, xmlParameter, xmlfirmadoParameter, xmlrespuestaParameter, estadoParameter, documento_idParameter, fechaParameter);
        }
    
        public virtual ObjectResult<IniciarSesion_Result> IniciarSesion(string nombreUsuario, string password)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("NombreUsuario", nombreUsuario) :
                new ObjectParameter("NombreUsuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesion_Result>("IniciarSesion", nombreUsuarioParameter, passwordParameter);
        }
    
        public virtual ObjectResult<ListaCategorias_Result> ListaCategorias(Nullable<int> tipoCategoria)
        {
            var tipoCategoriaParameter = tipoCategoria.HasValue ?
                new ObjectParameter("tipoCategoria", tipoCategoria) :
                new ObjectParameter("tipoCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCategorias_Result>("ListaCategorias", tipoCategoriaParameter);
        }
    
        public virtual ObjectResult<ListaCategorías_Result> ListaCategorías()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCategorías_Result>("ListaCategorías");
        }
    
        public virtual ObjectResult<ListaCategoriasActivos_Result> ListaCategoriasActivos(Nullable<int> tipoCategoria)
        {
            var tipoCategoriaParameter = tipoCategoria.HasValue ?
                new ObjectParameter("tipoCategoria", tipoCategoria) :
                new ObjectParameter("tipoCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCategoriasActivos_Result>("ListaCategoriasActivos", tipoCategoriaParameter);
        }
    
        public virtual ObjectResult<ListaCategoriasTodo_Result> ListaCategoriasTodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCategoriasTodo_Result>("ListaCategoriasTodo");
        }
    
        public virtual ObjectResult<ListaCliente_Result> ListaCliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCliente_Result>("ListaCliente");
        }
    
        public virtual ObjectResult<ListaClientes_Result> ListaClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaClientes_Result>("ListaClientes");
        }
    
        public virtual ObjectResult<ListaClientesRecientes_Result> ListaClientesRecientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaClientesRecientes_Result>("ListaClientesRecientes");
        }
    
        public virtual ObjectResult<ListaClientesTodos_Result> ListaClientesTodos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaClientesTodos_Result>("ListaClientesTodos");
        }
    
        public virtual ObjectResult<ListaCoches_Result> ListaCoches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCoches_Result>("ListaCoches");
        }
    
        public virtual ObjectResult<ListaCochesRecientes_Result> ListaCochesRecientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCochesRecientes_Result>("ListaCochesRecientes");
        }
    
        public virtual ObjectResult<ListaCochesTodos_Result> ListaCochesTodos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCochesTodos_Result>("ListaCochesTodos");
        }
    
        public virtual ObjectResult<ListaCochesUsuario_Result> ListaCochesUsuario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCochesUsuario_Result>("ListaCochesUsuario");
        }
    
        public virtual ObjectResult<ListaFacturaE_Result> ListaFacturaE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaFacturaE_Result>("ListaFacturaE");
        }
    
        public virtual ObjectResult<ListaFacturaElectronica_Result> ListaFacturaElectronica(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaFacturaElectronica_Result>("ListaFacturaElectronica", idParameter);
        }
    
        public virtual ObjectResult<ListaFacturas_Result> ListaFacturas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaFacturas_Result>("ListaFacturas");
        }
    
        public virtual ObjectResult<ListaFacturasActivas_Result> ListaFacturasActivas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaFacturasActivas_Result>("ListaFacturasActivas");
        }
    
        public virtual ObjectResult<ListaFacturasElectronicasFechas_Result> ListaFacturasElectronicasFechas(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("fechaDesde", fechaDesde) :
                new ObjectParameter("fechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("fechaHasta", fechaHasta) :
                new ObjectParameter("fechaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaFacturasElectronicasFechas_Result>("ListaFacturasElectronicasFechas", fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual ObjectResult<ListaFacturasHoy_Result> ListaFacturasHoy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaFacturasHoy_Result>("ListaFacturasHoy");
        }
    
        public virtual ObjectResult<ListaFacturasRecientes_Result> ListaFacturasRecientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaFacturasRecientes_Result>("ListaFacturasRecientes");
        }
    
        public virtual ObjectResult<Nullable<int>> ListaIdPerfil(string dato)
        {
            var datoParameter = dato != null ?
                new ObjectParameter("dato", dato) :
                new ObjectParameter("dato", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ListaIdPerfil", datoParameter);
        }
    
        public virtual ObjectResult<ListaMecanicos_Result> ListaMecanicos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaMecanicos_Result>("ListaMecanicos");
        }
    
        public virtual ObjectResult<Nullable<int>> ListaNumeroFactura()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ListaNumeroFactura");
        }
    
        public virtual int ListaOrdenEditar(string tipo)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListaOrdenEditar", tipoParameter);
        }
    
        public virtual ObjectResult<ListaOrdenesActivas_Result> ListaOrdenesActivas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaOrdenesActivas_Result>("ListaOrdenesActivas");
        }
    
        public virtual ObjectResult<ListaOrdenesHoy_Result> ListaOrdenesHoy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaOrdenesHoy_Result>("ListaOrdenesHoy");
        }
    
        public virtual ObjectResult<ListaOrdenesRecientes_Result> ListaOrdenesRecientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaOrdenesRecientes_Result>("ListaOrdenesRecientes");
        }
    
        public virtual ObjectResult<ListaOrdenesUsuario_Result> ListaOrdenesUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaOrdenesUsuario_Result>("ListaOrdenesUsuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<ListaOrdenesUsuarioMec_Result> ListaOrdenesUsuarioMec(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaOrdenesUsuarioMec_Result>("ListaOrdenesUsuarioMec", idUsuarioParameter);
        }
    
        public virtual ObjectResult<ListaPerfil_Result> ListaPerfil()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaPerfil_Result>("ListaPerfil");
        }
    
        public virtual ObjectResult<ListaRegla_Result> ListaRegla()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaRegla_Result>("ListaRegla");
        }
    
        public virtual ObjectResult<ListaRevisiones_Result> ListaRevisiones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaRevisiones_Result>("ListaRevisiones");
        }
    
        public virtual ObjectResult<ListaRevisionesActivas_Result> ListaRevisionesActivas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaRevisionesActivas_Result>("ListaRevisionesActivas");
        }
    
        public virtual ObjectResult<ListaRevisionesHoy_Result> ListaRevisionesHoy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaRevisionesHoy_Result>("ListaRevisionesHoy");
        }
    
        public virtual ObjectResult<ListaRevisionesPorIdCoche_Result> ListaRevisionesPorIdCoche()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaRevisionesPorIdCoche_Result>("ListaRevisionesPorIdCoche");
        }
    
        public virtual ObjectResult<ListaRevisionesRecientes_Result> ListaRevisionesRecientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaRevisionesRecientes_Result>("ListaRevisionesRecientes");
        }
    
        public virtual ObjectResult<ListarUsuario_Result> ListarUsuario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarUsuario_Result>("ListarUsuario");
        }
    
        public virtual ObjectResult<ListarUsuarioPorId_Result> ListarUsuarioPorId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarUsuarioPorId_Result>("ListarUsuarioPorId");
        }
    
        public virtual ObjectResult<ListaTipoCategorias_Result> ListaTipoCategorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaTipoCategorias_Result>("ListaTipoCategorias");
        }
    
        public virtual ObjectResult<ListaTipoCategoriasActivos_Result> ListaTipoCategoriasActivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaTipoCategoriasActivos_Result>("ListaTipoCategoriasActivos");
        }
    
        public virtual ObjectResult<ListaTransPerfilRegla_Result> ListaTransPerfilRegla()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaTransPerfilRegla_Result>("ListaTransPerfilRegla");
        }
    
        public virtual ObjectResult<ListaUsuario_Result> ListaUsuario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaUsuario_Result>("ListaUsuario");
        }
    
        public virtual ObjectResult<ListaUsuarioMecanico_Result> ListaUsuarioMecanico(Nullable<int> idPerfil, Nullable<int> estado1, Nullable<int> estado2)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            var estado1Parameter = estado1.HasValue ?
                new ObjectParameter("estado1", estado1) :
                new ObjectParameter("estado1", typeof(int));
    
            var estado2Parameter = estado2.HasValue ?
                new ObjectParameter("estado2", estado2) :
                new ObjectParameter("estado2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaUsuarioMecanico_Result>("ListaUsuarioMecanico", idPerfilParameter, estado1Parameter, estado2Parameter);
        }
    
        public virtual ObjectResult<ListaUsuarioPorEstado_Result> ListaUsuarioPorEstado(Nullable<int> estado)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaUsuarioPorEstado_Result>("ListaUsuarioPorEstado", estadoParameter);
        }
    
        public virtual ObjectResult<ListaUsuarioReporteMec_Result> ListaUsuarioReporteMec(Nullable<int> estado)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaUsuarioReporteMec_Result>("ListaUsuarioReporteMec", estadoParameter);
        }
    
        public virtual ObjectResult<LoginUsuario_Result> LoginUsuario(string nombre, string contraseña)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginUsuario_Result>("LoginUsuario", nombreParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<ObtenerCliente_Result> ObtenerCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerCliente_Result>("ObtenerCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<ObtenerCoche_Result> ObtenerCoche(Nullable<int> idCoche)
        {
            var idCocheParameter = idCoche.HasValue ?
                new ObjectParameter("idCoche", idCoche) :
                new ObjectParameter("idCoche", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerCoche_Result>("ObtenerCoche", idCocheParameter);
        }
    
        public virtual ObjectResult<ObtenerFactura_Result> ObtenerFactura(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerFactura_Result>("ObtenerFactura", idFacturaParameter);
        }
    
        public virtual int ObtenerIdUsuario(string nombre, string contraseña)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerIdUsuario", nombreParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<ObtenerMecanico_Result> ObtenerMecanico(Nullable<int> idMecanico)
        {
            var idMecanicoParameter = idMecanico.HasValue ?
                new ObjectParameter("idMecanico", idMecanico) :
                new ObjectParameter("idMecanico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerMecanico_Result>("ObtenerMecanico", idMecanicoParameter);
        }
    
        public virtual ObjectResult<ObtenerOrden_Result> ObtenerOrden(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("idOrden", idOrden) :
                new ObjectParameter("idOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerOrden_Result>("ObtenerOrden", idOrdenParameter);
        }
    
        public virtual ObjectResult<ObtenerPlacaCoche_Result> ObtenerPlacaCoche(string placa)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerPlacaCoche_Result>("ObtenerPlacaCoche", placaParameter);
        }
    
        public virtual ObjectResult<ObtenerRevisión_Result> ObtenerRevisión(Nullable<int> idRevisión)
        {
            var idRevisiónParameter = idRevisión.HasValue ?
                new ObjectParameter("idRevisión", idRevisión) :
                new ObjectParameter("idRevisión", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerRevisión_Result>("ObtenerRevisión", idRevisiónParameter);
        }
    
        public virtual ObjectResult<ObtenerRevisionCompleta_Result> ObtenerRevisionCompleta(Nullable<int> idRevision)
        {
            var idRevisionParameter = idRevision.HasValue ?
                new ObjectParameter("idRevision", idRevision) :
                new ObjectParameter("idRevision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerRevisionCompleta_Result>("ObtenerRevisionCompleta", idRevisionParameter);
        }
    
        public virtual ObjectResult<ObtenerUsuario_Result> ObtenerUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerUsuario_Result>("ObtenerUsuario", idUsuarioParameter);
        }
    }
}
